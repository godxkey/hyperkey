[gd_scene load_steps=8 format=2]

[ext_resource path="res://world/StarSquare.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeColorConstant" id=2]
output_port_for_preview = 0
constant = Color( 0.309804, 0.67451, 1, 1 )

[sub_resource type="VisualShaderNodeInput" id=3]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]
output_port_for_preview = 1

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 2.5 ]
operator = 5

[sub_resource type="VisualShader" id=5]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(0.309804, 0.674510, 1.000000);
	float n_out2p1 = 1.000000;

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorDecompose:5
	float n_out5p0 = n_out3p0.x;
	float n_out5p1 = n_out3p0.y;
	float n_out5p2 = n_out3p0.z;

// ScalarOp:6
	float n_in6p1 = 2.50000;
	float n_out6p0 = pow(n_out5p1, n_in6p1);

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -514, -42.5 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 240, 120 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( -360, 80 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( -440, 320 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -220, 320 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( 20, 240 )
nodes/fragment/connections = PoolIntArray( 3, 0, 5, 0, 2, 0, 0, 0, 5, 1, 6, 0, 6, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )

[node name="Atmosphere" type="Sprite"]
material = SubResource( 6 )
position = Vector2( 2.84217e-14, -104 )
scale = Vector2( 247.201, 53.6643 )
z_index = -10
texture = ExtResource( 1 )
